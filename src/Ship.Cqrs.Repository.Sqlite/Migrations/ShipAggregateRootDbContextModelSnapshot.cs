// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShipService.Infrastructure.Ship.Cqrs.Repository.Sqlite;

namespace ShipService.Infrastructure.Ship.Cqrs.Repository.Sqlite.Migrations
{
    [DbContext(typeof(ShipAggregateRootDbContext))]
    partial class ShipAggregateRootDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("ShipService.Domain.ShipAggregateRoot.Domains.ShipDimension", b =>
                {
                    b.Property<Guid>("DomainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("DomainId");

                    b.Property<Guid>("DimensionId")
                        .HasColumnType("TEXT")
                        .HasColumnName("DimensionId");

                    b.Property<decimal>("Height")
                        .HasColumnType("TEXT")
                        .HasColumnName("Height");

                    b.Property<Guid>("ShipAggregateRootId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Unit");

                    b.Property<decimal>("Width")
                        .HasColumnType("TEXT")
                        .HasColumnName("Width");

                    b.HasKey("DomainId");

                    b.HasIndex("ShipAggregateRootId");

                    b.ToTable("ShipDimensions");

                    b.HasData(
                        new
                        {
                            DomainId = new Guid("5c07bacc-afa9-4931-8b5f-566cff2a05f0"),
                            DimensionId = new Guid("5c07bacc-afa9-4931-8b5f-566cff2a05f0"),
                            Height = 1.1m,
                            ShipAggregateRootId = new Guid("882637bc-050b-48d7-a802-88920c53036c"),
                            Unit = "Meters",
                            Width = 2.2m
                        },
                        new
                        {
                            DomainId = new Guid("255f68a0-d11f-4a45-ba13-afcfc258e276"),
                            DimensionId = new Guid("255f68a0-d11f-4a45-ba13-afcfc258e276"),
                            Height = 121.1m,
                            ShipAggregateRootId = new Guid("882637bc-050b-48d7-a802-88920c53036c"),
                            Unit = "Feet",
                            Width = 221.2m
                        });
                });

            modelBuilder.Entity("ShipService.Domain.ShipAggregateRoot.ShipAggregateRoot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Code");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsMarkedToDelete")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsMarkedToDelete");

                    b.Property<Guid>("LastUpdatedBy")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastUpdatedDate");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ShipName");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Version");

                    b.HasKey("Id");

                    b.ToTable("ShipAggregateRoots");

                    b.HasData(
                        new
                        {
                            Id = new Guid("882637bc-050b-48d7-a802-88920c53036c"),
                            Code = "AAAA-1111-A1",
                            CreatedBy = new Guid("35e8f034-89c6-4329-b980-29a33a6024f1"),
                            CreatedDate = new DateTime(2021, 8, 26, 14, 45, 7, 612, DateTimeKind.Utc).AddTicks(5894),
                            IsMarkedToDelete = false,
                            LastUpdatedBy = new Guid("399324f6-6a75-496c-92be-3d5b0ef5c278"),
                            LastUpdatedDate = new DateTime(2021, 8, 26, 14, 45, 7, 612, DateTimeKind.Utc).AddTicks(5907),
                            ShipName = "Ship 1",
                            Version = 1
                        });
                });

            modelBuilder.Entity("ShipService.Domain.ShipAggregateRoot.Domains.ShipDimension", b =>
                {
                    b.HasOne("ShipService.Domain.ShipAggregateRoot.ShipAggregateRoot", "ShipAggregateRoot")
                        .WithMany("ShipDimensions")
                        .HasForeignKey("ShipAggregateRootId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShipAggregateRoot");
                });

            modelBuilder.Entity("ShipService.Domain.ShipAggregateRoot.ShipAggregateRoot", b =>
                {
                    b.Navigation("ShipDimensions");
                });
#pragma warning restore 612, 618
        }
    }
}
